#####
# Get currently authorized user's ID
/users/me
#####

/users/me/friends
/users/me/lists/1
/users/me/lists/2

#####
# Create and modify friends lists
/lists

## Show all lists
GET lists/

## Create a list
POST lists/

## Show list information
GET lists/id

## Change list information
PUT lists/id

## Delete list
DELETE lists/id

## Add user to list
PUT lists/id/users

## Remove user from list
DELETE lists/id/users/uid
#####

Hotspot
/hotspots
/hotspots/{id}
/hotspots/mensa
/hotspots/library
/hotspots/mensa/beacons/{id}
/hotspots/library/beacons/{id}


/hotspots/mensa/active_friends
{
  friends: [871283,8172837213]
  friends_locations: [{
    id: 9820189238,
    location : {
      lat: 928931,
      lon: 12989312
    }
  }]
}

Subinformation (Q: Where should it be persisted? User model, Hotspot model?):
-> Autoping YES/NO: If I enter the hotspot please ping my friends automatically
-> AutoLocation YES/NO: Locate me via Bluetooth automatically when I have turned it on 

Use cases:
-> Notify ME if I enter the hotspot
--> Option: Ping my Friends at the hotspot
--> Option: Detail my location: either via Bluetooth or by manual pinnning
-> Notify ME if others are already at the hotspot where I entered

#####
# Context information for finding a user's peers
/meetings

## Get all current meetings
GET meetings/

## Create a meeting (including location)
POST meetings/

## Get information about one meeting
GET meetings/id

## Get location of a meeting (public for all participants)
GET meetings/id/location

## Update meeting
PUT meetings/id

## Delete a meeting
DELETE meetings/id
#####


#####
# Bluetooth beacons related endpoints
/beacons

## Get information of all all beacons
GET beacons/

## Add a beacon with location
POST beacons/

## Get information of beacon
GET beacons/id

## Change beacon information
PUT beacons/id

## Delete a beacon from database
DELETE beacons/id

## Get location of beacon
GET beacons/id/location
#####


#####
# Endpoints needed for user management
/users

## Get list of all users
GET users/

## Add user to system
POST users/

## Get information of user
GET users/id

## Change user information
PUT users/id

## Delete user
DELETE users/id

## Get all lists of user
GET users/id/lists

## Get all meetings of user
GET users/id/meetings
#####
